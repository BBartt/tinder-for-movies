{"version":3,"sources":["components/Header/index.tsx","components/Button/index.tsx","components/ChoseMovie/index.tsx","pages/ChoseMovie/index.tsx","pages/ContactPage/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["Header","children","className","Button","onClick","ChoseMovie","movies","handleSwipe","direction","id","console","log","map","movie","onSwipe","preventSwipe","title","rating","style","backgroundImage","imageURL","summary","ChoseMoviePage","dummyData","ContactPage","routes","App","path","ReactDOM","render","document","getElementById"],"mappings":"+1DAQeA,EAJmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnC,OAAO,wBAAQC,UAAU,SAAlB,SAA4BD,K,iBCWtBE,EAVmB,SAAC,GAAD,IAChCF,EADgC,EAChCA,SACAG,EAFgC,EAEhCA,QACAF,EAHgC,EAGhCA,UAHgC,OAKhC,wBAAQE,QAASA,EAASF,UAAS,wBAAYA,QAAZ,IAAYA,IAAa,IAA5D,SACGD,KC6CUI,EApD2B,SAAC,GAEvB,IADlBC,EACiB,EADjBA,OAEMC,EAAc,SAACC,EAAmBC,GACtCC,QAAQC,IAAR,sBAA2BH,EAA3B,6BAAyDC,KAG3D,OACE,qBAAKP,UAAU,eAAf,SACGI,EAAOM,KAAI,SAACC,GAAD,aACV,eAAC,IAAD,CAEEC,QAAS,SAACN,GAAD,OAAeD,EAAYC,EAAWK,EAAMJ,KACrDP,UAAU,cACVa,aAAc,CAAC,KAAM,QAJvB,UAME,sBAAKb,UAAU,QAAf,UACE,sBAAKA,UAAU,aAAf,UACE,6BAAKW,EAAMG,QACX,sBAAKd,UAAU,eAAf,UACE,+CAAQW,EAAMI,cAAd,QAAwB,OACxB,8CAIJ,qBACEf,UAAU,cACVgB,MAAO,CAAEC,gBAAgB,OAAD,OAASN,EAAMO,SAAf,QAE1B,mBAAGlB,UAAU,gBAAb,SAA8BW,EAAMQ,aAGtC,sBAAKnB,UAAU,UAAf,UACE,cAAC,EAAD,CACEA,UAAU,eACVE,QAAS,kBAAMG,EAAY,OAAQM,EAAMJ,KAF3C,oBAMA,cAAC,EAAD,CACEP,UAAU,aACVE,QAAS,kBAAMG,EAAY,QAASM,EAAMJ,KAF5C,yBA5BGI,EAAMJ,U,QCDNa,EAXkB,WAC/B,OACE,sBAAKpB,UAAU,oBAAf,UACE,oBAAIA,UAAU,aAAd,0EAGA,cAAC,EAAD,CAAYI,OAAQiB,QCAXC,EARe,WAC5B,OACE,qBAAKtB,UAAU,eAAf,8CCJSuB,EACL,IADKA,EAEF,WC0BIC,EArBO,WACpB,OACE,cAAC,IAAD,UACE,qCACE,cAAC,EAAD,gCAEA,sBAAMxB,UAAU,OAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyB,KAAMF,EAAb,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOE,KAAMF,EAAb,SACE,cAAC,EAAD,iB,MCddG,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.58776bbe.chunk.js","sourcesContent":["interface IHeader {\r\n  children: string;\r\n}\r\n\r\nconst Header: React.FC<IHeader> = ({ children }) => {\r\n  return <header className=\"header\">{children}</header>;\r\n};\r\n\r\nexport default Header;\r\n","interface IButton {\r\n  children: string;\r\n  className?: string;\r\n  onClick: (...param: any) => void;\r\n}\r\n\r\nconst Button: React.FC<IButton> = ({\r\n  children,\r\n  onClick,\r\n  className,\r\n}) => (\r\n  <button onClick={onClick} className={`button ${className ?? ''}`}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\nimport Button from '../Button';\r\nimport { IChoseMovie } from '../../interfaces';\r\n\r\nconst ChoseMovie: React.FC<IChoseMovie> = ({\r\n  movies,\r\n}): JSX.Element => {\r\n  const handleSwipe = (direction: string, id: number) => {\r\n    console.log(`You swiped: ${direction} item with id of: ${id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"choose-movie\">\r\n      {movies.map((movie) => (\r\n        <TinderCard\r\n          key={movie.id}\r\n          onSwipe={(direction) => handleSwipe(direction, movie.id)}\r\n          className=\"tinder-card\"\r\n          preventSwipe={['up', 'down']}\r\n        >\r\n          <div className=\"movie\">\r\n            <div className=\"movie-head\">\r\n              <h4>{movie.title}</h4>\r\n              <div className=\"movie-rating\">\r\n                <span>({movie.rating ?? '-'}</span>\r\n                <span>/10)</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"movie-image\"\r\n              style={{ backgroundImage: `url(${movie.imageURL})` }}\r\n            />\r\n            <p className=\"movie-summary\">{movie.summary}</p>\r\n          </div>\r\n\r\n          <div className=\"actions\">\r\n            <Button\r\n              className=\"button-green\"\r\n              onClick={() => handleSwipe('left', movie.id)}\r\n            >\r\n              Accept\r\n            </Button>\r\n            <Button\r\n              className=\"button-red\"\r\n              onClick={() => handleSwipe('right', movie.id)}\r\n            >\r\n              Reject\r\n            </Button>\r\n          </div>\r\n        </TinderCard>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChoseMovie;\r\n","import React from 'react';\r\nimport ChoseMovie from '../../components/ChoseMovie';\r\nimport dummyData from '../../dummyData.json';\r\n\r\nconst ChoseMoviePage: React.FC = (): JSX.Element => {\r\n  return (\r\n    <div className=\"choose-movie-page\">\r\n      <h2 className=\"swipe-info\">\r\n        Swipe left to like movie or swipe right to dislike the movie\r\n      </h2>\r\n      <ChoseMovie movies={dummyData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChoseMoviePage;\r\n","import React from 'react';\r\n\r\nconst ContactPage: React.FC = (): JSX.Element => {\r\n  return (\r\n    <div className=\"contact-page\">\r\n      The contact page with some text\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n","export const routes = {\r\n  home: '/',\r\n  contact: '/contact',\r\n};\r\n","import React from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport ChoseMovie from './pages/ChoseMovie';\r\nimport ContactPage from './pages/ContactPage';\r\nimport { routes } from './routes';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <HashRouter>\r\n      <>\r\n        <Header>Tinder for movies</Header>\r\n\r\n        <main className=\"main\">\r\n          <Switch>\r\n            <Route path={routes.home}>\r\n              <ChoseMovie />\r\n            </Route>\r\n            <Route path={routes.contact}>\r\n              <ContactPage />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles/app.scss';\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}