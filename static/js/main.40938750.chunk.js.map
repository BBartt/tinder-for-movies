{"version":3,"sources":["components/Header/index.tsx","components/Button/index.tsx","redux/api/config.tsx","redux/api/moviesApi.tsx","redux/actions/movies/types.tsx","redux/actions/movies/actions.tsx","components/ChoseMovie/index.tsx","utils/index.tsx","components/Loader/index.tsx","hooks/index.tsx","pages/ChoseMovie/index.tsx","pages/ContactPage/index.tsx","routes/index.tsx","App.tsx","redux/reducers/moviesReducer.tsx","redux/reducers/recommendationsReducer.tsx","redux/store/index.tsx","index.tsx"],"names":["Header","children","className","Button","onClick","API_URL","process","token","API","axios","create","baseURL","headers","Authorization","Constants","moviesApi","get","put","id","param","console","log","fetchMoviesFailure","items","type","FETCH_MOVIES_FAILURE","payload","message","getMovies","dispatch","FETCH_MOVIES_BEGIN","then","res","data","FETCH_MOVIES_SUCCESS","results","catch","err","rateMovie","item","ACCEPT","REJECT","rejectMovie","ChoseMovie","movies","useDispatch","handleRateMovie","direction","directionToParam","REMOVE_MOVIE","removeMovie","map","movie","onSwipe","preventSwipe","vote_average","style","backgroundImage","backdrop_path","overview","Loader","useSelectorTyped","fn","useSelector","ChoseMoviePage","state","isLoading","error","useEffect","length","ContactPage","routes","App","path","initialState","moviesReducer","action","newMovies","filter","accepted","rejected","recommendationsReducer","reducers","combineReducers","acceptedRejected","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40938750.chunk.js","sourcesContent":["interface IHeader {\r\n  children: string;\r\n}\r\n\r\nconst Header: React.FC<IHeader> = ({ children }) => {\r\n  return <header className=\"header\">{children}</header>;\r\n};\r\n\r\nexport default Header;\r\n","interface IButton {\r\n  children: string;\r\n  className?: string;\r\n  onClick: (...param: any) => void;\r\n}\r\n\r\nconst Button: React.FC<IButton> = ({\r\n  children,\r\n  onClick,\r\n  className,\r\n}) => (\r\n  <button onClick={onClick} className={`button ${className ?? ''}`}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL ?? '';\r\nconst token = process.env.REACT_APP_API_KEY ?? '';\r\n\r\nconst API = axios.create({\r\n  baseURL: API_URL,\r\n  headers: { Authorization: `Bearer ${token}` },\r\n});\r\n\r\nexport default API;\r\n","import { AxiosResponse } from 'axios';\r\nimport API from './config';\r\n\r\nfunction get(): Promise<AxiosResponse<any, any>> {\r\n  return API.get('discover/movie');\r\n}\r\n\r\nfunction put(\r\n  id: number,\r\n  param?: 'accept' | 'reject',\r\n): Promise<AxiosResponse<any, any>> {\r\n  // it should hit /recommendations but I have any api so insted I fetch this particular movie and and place it into state for future usage\r\n  console.log(`param`, param);\r\n  return API.get(`/movie/${id}`);\r\n  // return API.put(`/recommendations/${id}/${param}`);\r\n}\r\n\r\nexport const moviesApi = {\r\n  get,\r\n  put,\r\n};\r\n","import { IMovie } from '../../../interfaces';\r\n\r\nexport enum Constants {\r\n  FETCH_MOVIES_BEGIN = 'FETCH_MOVIES_BEGIN',\r\n  FETCH_MOVIES_FAILURE = 'FETCH_MOVIES_FAILURE',\r\n  FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS',\r\n  ACCEPT = 'ACCEPT',\r\n  REJECT = 'REJECT',\r\n  REMOVE_MOVIE = 'REMOVE_MOVIE',\r\n}\r\n\r\nexport type FetchMoviesBegin = {\r\n  type: typeof Constants.FETCH_MOVIES_BEGIN;\r\n  payload: null;\r\n};\r\n\r\nexport type FetchMoviesSuccess = {\r\n  type: typeof Constants.FETCH_MOVIES_SUCCESS;\r\n  payload: IMovie[];\r\n};\r\n\r\nexport type FetchMoviesFail = {\r\n  type: typeof Constants.FETCH_MOVIES_FAILURE;\r\n  payload: string;\r\n};\r\n\r\nexport type IActionMoviesReducer =\r\n  | FetchMoviesBegin\r\n  | FetchMoviesSuccess\r\n  | FetchMoviesFail\r\n  | RemoveMovie;\r\n\r\nexport type AcceptMovie = {\r\n  type: typeof Constants.ACCEPT;\r\n  payload: IMovie;\r\n};\r\n\r\nexport type RejectMovie = {\r\n  type: typeof Constants.REJECT;\r\n  payload: IMovie;\r\n};\r\n\r\nexport type IActionRecommendationsReducer = AcceptMovie | RejectMovie;\r\n\r\nexport type RemoveMovie = {\r\n  type: typeof Constants.REMOVE_MOVIE;\r\n  payload: number;\r\n};\r\n","import { ThunkAction } from 'redux-thunk';\r\nimport { AnyAction } from 'redux';\r\nimport { IMovie } from '../../../interfaces';\r\nimport { RootState } from '../../store';\r\nimport { moviesApi } from '../../api/moviesApi';\r\nimport {\r\n  FetchMoviesFail,\r\n  FetchMoviesBegin,\r\n  FetchMoviesSuccess,\r\n  Constants,\r\n  AcceptMovie,\r\n  RejectMovie,\r\n  RemoveMovie,\r\n} from './types';\r\n\r\nexport const fetchMoviesBegin = (): FetchMoviesBegin => ({\r\n  type: Constants.FETCH_MOVIES_BEGIN,\r\n  payload: null,\r\n});\r\n\r\nexport const fetchMoviesSuccess = (items: {\r\n  results: IMovie[];\r\n}): FetchMoviesSuccess => ({\r\n  type: Constants.FETCH_MOVIES_SUCCESS,\r\n  payload: items.results,\r\n});\r\n\r\nexport const fetchMoviesFailure = (items: {\r\n  message: string;\r\n}): FetchMoviesFail => ({\r\n  type: Constants.FETCH_MOVIES_FAILURE,\r\n  payload: items.message,\r\n});\r\n\r\nexport const getMovies =\r\n  (): ThunkAction<void, RootState, unknown, AnyAction> =>\r\n  (dispatch) => {\r\n    dispatch(fetchMoviesBegin());\r\n    moviesApi\r\n      .get()\r\n      .then((res) => {\r\n        dispatch(fetchMoviesSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(fetchMoviesFailure(err));\r\n      });\r\n  };\r\n\r\nexport const acceptMovie = (item: IMovie): AcceptMovie => ({\r\n  type: Constants.ACCEPT,\r\n  payload: item,\r\n});\r\n\r\nexport const rejectMovie = (item: IMovie): RejectMovie => ({\r\n  type: Constants.REJECT,\r\n  payload: item,\r\n});\r\n\r\nexport const rateMovie =\r\n  (\r\n    id: number,\r\n    param: 'accept' | 'reject',\r\n  ): ThunkAction<void, RootState, unknown, AnyAction> =>\r\n  (dispatch) => {\r\n    moviesApi\r\n      .put(id, param)\r\n      .then((res) => {\r\n        dispatch(\r\n          param === 'accept'\r\n            ? acceptMovie(res.data)\r\n            : rejectMovie(res.data),\r\n        );\r\n      })\r\n      .catch((err) => dispatch(fetchMoviesFailure(err)));\r\n  };\r\n\r\nexport const removeMovie = (id: number): RemoveMovie => ({\r\n  type: Constants.REMOVE_MOVIE,\r\n  payload: id,\r\n});\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport TinderCard from 'react-tinder-card';\r\nimport Button from '../Button';\r\nimport { IChoseMovie } from '../../interfaces';\r\nimport {\r\n  rateMovie,\r\n  removeMovie,\r\n} from '../../redux/actions/movies/actions';\r\nimport { directionToParam } from '../../utils';\r\n\r\ntype SwipeDirection = 'left' | 'right';\r\n\r\nconst ChoseMovie: React.FC<IChoseMovie> = ({\r\n  movies,\r\n}): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleRateMovie = (direction: SwipeDirection, id: number) => {\r\n    const param = directionToParam(direction);\r\n    dispatch(rateMovie(id, param));\r\n    dispatch(removeMovie(id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"choose-movie\">\r\n      {movies.map((movie) => (\r\n        <TinderCard\r\n          key={movie.id}\r\n          onSwipe={(direction: any) =>\r\n            handleRateMovie(direction, movie.id)\r\n          }\r\n          className=\"tinder-card\"\r\n          preventSwipe={['up', 'down']}\r\n        >\r\n          <div className=\"movie\">\r\n            <div className=\"movie-head\">\r\n              <h4>{movie.id}</h4>\r\n\r\n              <div className=\"movie-rating\">\r\n                <span>({movie.vote_average ?? '-'}</span>\r\n                <span>/10)</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"movie-image\"\r\n              style={{\r\n                backgroundImage: `url(https://image.tmdb.org/t/p/original/${movie.backdrop_path})`,\r\n              }}\r\n            />\r\n            <p className=\"movie-summary\">{movie.overview}</p>\r\n          </div>\r\n\r\n          <div className=\"actions\">\r\n            <Button\r\n              className=\"button-green\"\r\n              onClick={() => handleRateMovie('left', movie.id)}\r\n            >\r\n              Accept\r\n            </Button>\r\n            <Button\r\n              className=\"button-red\"\r\n              onClick={() => handleRateMovie('right', movie.id)}\r\n            >\r\n              Reject\r\n            </Button>\r\n          </div>\r\n        </TinderCard>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChoseMovie;\r\n","export const directionToParam = (\r\n  direction: 'left' | 'right',\r\n): 'accept' | 'reject' => {\r\n  if (direction === 'left') {\r\n    return 'accept';\r\n  }\r\n\r\n  return 'reject';\r\n};\r\n","const Loader: React.FC = () => <h1 className=\"loader\">Loading...</h1>;\r\n\r\nexport default Loader;\r\n","import { useSelector } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\n\r\nfunction useSelectorTyped<T>(fn: (state: RootState) => T): T {\r\n  return useSelector(fn);\r\n}\r\n\r\nexport default useSelectorTyped;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport ChoseMovie from '../../components/ChoseMovie';\r\nimport Loader from '../../components/Loader';\r\nimport useSelectorTyped from '../../hooks';\r\nimport { getMovies } from '../../redux/actions/movies/actions';\r\n\r\nconst ChoseMoviePage: React.FC = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { movies, isLoading, error } = useSelectorTyped(\r\n    (state) => state.movies,\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getMovies());\r\n  }, [dispatch]);\r\n\r\n  if (error) return <h1>{error}</h1>;\r\n\r\n  return (\r\n    <div className=\"choose-movie-page\">\r\n      <h2 className=\"swipe-info\">\r\n        Swipe left to like movie or swipe right to dislike the movie\r\n      </h2>\r\n\r\n      {isLoading && <Loader />}\r\n\r\n      {movies.length > 0 && <ChoseMovie movies={movies} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChoseMoviePage;\r\n","import React from 'react';\r\n\r\nconst ContactPage: React.FC = (): JSX.Element => {\r\n  return (\r\n    <div className=\"contact-page\">\r\n      The contact page with some text\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n","export const routes = {\r\n  home: '/',\r\n  contact: '/contact',\r\n};\r\n","import React from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport ChoseMovie from './pages/ChoseMovie';\r\nimport ContactPage from './pages/ContactPage';\r\nimport { routes } from './routes';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <HashRouter>\r\n      <>\r\n        <Header>Tinder for movies</Header>\r\n\r\n        <main className=\"main\">\r\n          <Switch>\r\n            <Route path={routes.home}>\r\n              <ChoseMovie />\r\n            </Route>\r\n            <Route path={routes.contact}>\r\n              <ContactPage />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { IMovie } from '../../interfaces';\r\nimport {\r\n  Constants,\r\n  IActionMoviesReducer,\r\n} from '../actions/movies/types';\r\n\r\nexport interface IinitialState {\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  movies: IMovie[];\r\n}\r\n\r\nexport const initialState: IinitialState = {\r\n  isLoading: false,\r\n  error: null,\r\n  movies: [],\r\n};\r\n\r\nconst moviesReducer = (\r\n  state: IinitialState = initialState,\r\n  action: IActionMoviesReducer,\r\n): IinitialState => {\r\n  switch (action.type) {\r\n    case Constants.FETCH_MOVIES_BEGIN:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case Constants.FETCH_MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        movies: action.payload,\r\n      };\r\n    case Constants.FETCH_MOVIES_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload,\r\n      };\r\n    case Constants.REMOVE_MOVIE: {\r\n      const newMovies: IMovie[] = state.movies.filter(\r\n        (movie) => movie.id !== action.payload,\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        movies: [...newMovies],\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default moviesReducer;\r\n","import { IMovie } from '../../interfaces';\r\nimport {\r\n  Constants,\r\n  IActionRecommendationsReducer,\r\n} from '../actions/movies/types';\r\n\r\nexport interface IinitialState {\r\n  accepted: IMovie[];\r\n  rejected: IMovie[];\r\n}\r\n\r\nexport const initialState: IinitialState = {\r\n  accepted: [],\r\n  rejected: [],\r\n};\r\n\r\nconst recommendationsReducer = (\r\n  state: IinitialState = initialState,\r\n  action: IActionRecommendationsReducer,\r\n): IinitialState => {\r\n  switch (action.type) {\r\n    case Constants.ACCEPT:\r\n      return {\r\n        ...state,\r\n        accepted: [...state.accepted, action.payload],\r\n      };\r\n    case Constants.REJECT:\r\n      return {\r\n        ...state,\r\n        rejected: [...state.rejected, action.payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default recommendationsReducer;\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport moviesReducer from '../reducers/moviesReducer';\r\nimport recommendationsReducer from '../reducers/recommendationsReducer';\r\n\r\nconst reducers = combineReducers({\r\n  movies: moviesReducer,\r\n  acceptedRejected: recommendationsReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk)),\r\n);\r\n\r\nexport type RootState = ReturnType<typeof reducers>;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","import { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport './styles/app.scss';\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}